on:
  # Trigger the workflow on push or pull request, but only for the develop branch
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  test_linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.6", "3.10"]

    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install Ubuntu system dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq -y gir1.2-gtk-3.0 gobject-introspection libgirepository1.0-dev xvfb
        if: matrix.os == 'ubuntu-latest'

      - name: Install Python dependencies
        run: |
          pip install PyGObject
          pip install pyxdg

      - name: Configure git
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

      - name: Test ${{ matrix.os }}
        run: xvfb-run ./test.py


  test_macos:
    runs-on: macos-10.15
    env:
      # a fixed path is required to use precompiled dependencies
      WRK_DIR: /Users/Shared/work
      # this contains a link to the job artifact we need
      GITLAB_CI_YAML: https://gitlab.com/dehesselle/zim_macos/-/raw/master/.gitlab-ci.yml
    name: Python 3.x on macos-10.15
    steps:
      - uses: actions/checkout@v3

      - name: Configure git
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

      # Install the latest version of the same dependencies that are used to
      # create the app.
      #   - get URL for job artifact from a specific line in .gitlab-ci.yml
      #   - download and extract the job artifact to WRK_DIR
      #   - run configuration to adapt to the current system (e.g. path to SDK)
      - name: Install dependencies
        run: |
          mkdir $WRK_DIR
          JOB_ARTIFACT=$(curl -L $GITLAB_CI_YAML | grep file1 | awk '{ print $3 }')
          curl -L $JOB_ARTIFACT | tar -C $WRK_DIR -xpJ
          eval "$(echo $WRK_DIR/jhb-*/usr/bin/jhb configure)"

      # Run the test suite, but skip testing "Diagram Editor" plugin (that test
      # isn't run on any other platform and appears to be broken) by removing
      # the "dot" binary.
      - name: Test macOS
        run: |
          eval "rm $(echo $WRK_DIR/jhb-*/bin/dot)"
          eval "$(echo $WRK_DIR/jhb-*/usr/bin/jhb run python3 $(pwd)/test.py)"
        env:
          # disable an internal test within the dependencies
          SYS_USRLOCAL_IGNORE: true


  test_windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false

    name: MSYS2 Python 3.x on windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2

      - name: Install system dependencies
        shell: msys2 {0}
        run: |
          pacman -S --noconfirm git mingw-w64-x86_64-gtk3 mingw-w64-x86_64-python3 mingw-w64-x86_64-python3-gobject mingw-w64-x86_64-python-xdg

      - name: Configure git
        shell: msys2 {0}
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

      - name: Test Windows
        shell: msys2 {0}
        run: python ./test.py
